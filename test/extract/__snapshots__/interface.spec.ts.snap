// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`export as-alias names do not conflict with type names in the type index 1`] = `
Object {
  "hybrids": Array [],
  "length": 0,
  "terms": Array [],
  "typeIndex": Object {
    "A": Object {
      "exported": Object {
        "name": "C",
      },
      "jsDoc": null,
      "kind": "interface",
      "languageLevel": "type",
      "name": "A",
      "properties": Array [
        Object {
          "jsDoc": null,
          "name": "c",
          "type": Object {
            "isPrimitive": false,
            "name": "C",
          },
        },
      ],
      "sourceLocation": Object {
        "fileLine": 1,
        "filePath": "/a.ts",
      },
      "text": "interface A {
  c: C;
}",
      "textWithJSDoc": "interface A {
  c: C;
}",
    },
    "C": Object {
      "exported": null,
      "jsDoc": null,
      "kind": "interface",
      "languageLevel": "type",
      "name": "C",
      "properties": Array [],
      "sourceLocation": Object {
        "fileLine": 5,
        "filePath": "/a.ts",
      },
      "text": "interface C {}",
      "textWithJSDoc": "interface C {}",
    },
  },
  "types": Array [],
}
`;

exports[`extracts doc from interface 1`] = `
Object {
  "hybrids": Array [],
  "length": 0,
  "terms": Array [],
  "typeIndex": Object {
    "A": Object {
      "exported": Object {
        "name": "A",
      },
      "jsDoc": null,
      "kind": "interface",
      "languageLevel": "type",
      "name": "A",
      "properties": Array [
        Object {
          "jsDoc": null,
          "name": "foo",
          "type": Object {
            "isPrimitive": true,
            "name": "string",
          },
        },
        Object {
          "jsDoc": null,
          "name": "bar",
          "type": Object {
            "isPrimitive": true,
            "name": "string",
          },
        },
      ],
      "sourceLocation": Object {
        "fileLine": 1,
        "filePath": "/a.ts",
      },
      "text": "export interface A {
  foo: string;
  bar: string;
}",
      "textWithJSDoc": "export interface A {
  foo: string;
  bar: string;
}",
    },
  },
  "types": Array [],
}
`;

exports[`if exported with as-alias then export name reflects alias name 1`] = `
Object {
  "hybrids": Array [],
  "length": 0,
  "terms": Array [],
  "typeIndex": Object {
    "A": Object {
      "exported": Object {
        "name": "B",
      },
      "jsDoc": null,
      "kind": "interface",
      "languageLevel": "type",
      "name": "A",
      "properties": Array [],
      "sourceLocation": Object {
        "fileLine": 1,
        "filePath": "/a.ts",
      },
      "text": "interface A {}",
      "textWithJSDoc": "interface A {}",
    },
  },
  "types": Array [],
}
`;
